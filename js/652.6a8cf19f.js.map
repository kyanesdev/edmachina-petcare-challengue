{"version":3,"file":"js/652.6a8cf19f.js","mappings":"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","sources":["webpack://edmachina-petcare-challengue/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://edmachina-petcare-challengue/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://edmachina-petcare-challengue/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://edmachina-petcare-challengue/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://edmachina-petcare-challengue/./node_modules/@kurkle/color/dist/color.esm.js","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.core.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.math.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.collection.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.extras.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.easing.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.color.ts","webpack://edmachina-petcare-challengue/../../src/core/core.animations.defaults.js","webpack://edmachina-petcare-challengue/../../src/core/core.layouts.defaults.js","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.intl.ts","webpack://edmachina-petcare-challengue/../../src/core/core.ticks.js","webpack://edmachina-petcare-challengue/../../src/core/core.scale.defaults.js","webpack://edmachina-petcare-challengue/../../src/core/core.defaults.js","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.canvas.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.options.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.config.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.curve.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.dom.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.interpolation.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.rtl.ts","webpack://edmachina-petcare-challengue/../../src/helpers/helpers.segment.js","webpack://edmachina-petcare-challengue/../src/core/core.animator.js","webpack://edmachina-petcare-challengue/../src/core/core.animation.js","webpack://edmachina-petcare-challengue/../src/core/core.animations.js","webpack://edmachina-petcare-challengue/../src/core/core.datasetController.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.bar.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.bubble.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.doughnut.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.line.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.polarArea.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.pie.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.radar.js","webpack://edmachina-petcare-challengue/../src/controllers/controller.scatter.js","webpack://edmachina-petcare-challengue/../src/core/core.adapters.ts","webpack://edmachina-petcare-challengue/../src/core/core.interaction.js","webpack://edmachina-petcare-challengue/../src/core/core.layouts.js","webpack://edmachina-petcare-challengue/../src/platform/platform.base.js","webpack://edmachina-petcare-challengue/../src/platform/platform.basic.js","webpack://edmachina-petcare-challengue/../src/platform/platform.dom.js","webpack://edmachina-petcare-challengue/../src/platform/index.js","webpack://edmachina-petcare-challengue/../src/core/core.element.ts","webpack://edmachina-petcare-challengue/../src/core/core.scale.autoskip.js","webpack://edmachina-petcare-challengue/../src/core/core.scale.js","webpack://edmachina-petcare-challengue/../src/core/core.typedRegistry.js","webpack://edmachina-petcare-challengue/../src/core/core.registry.js","webpack://edmachina-petcare-challengue/../src/core/core.plugins.js","webpack://edmachina-petcare-challengue/../src/core/core.config.js","webpack://edmachina-petcare-challengue/../src/core/core.controller.js","webpack://edmachina-petcare-challengue/../src/elements/element.arc.ts","webpack://edmachina-petcare-challengue/../src/elements/element.line.js","webpack://edmachina-petcare-challengue/../src/elements/element.point.ts","webpack://edmachina-petcare-challengue/../src/elements/element.bar.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.colors.ts","webpack://edmachina-petcare-challengue/../src/plugins/plugin.decimation.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/filler.segment.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/filler.helper.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/filler.options.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/filler.target.stack.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/simpleArc.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/filler.target.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/filler.drawing.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.filler/index.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.legend.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.title.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.subtitle.js","webpack://edmachina-petcare-challengue/../src/plugins/plugin.tooltip.js","webpack://edmachina-petcare-challengue/../src/scales/scale.category.js","webpack://edmachina-petcare-challengue/../src/scales/scale.linearbase.js","webpack://edmachina-petcare-challengue/../src/scales/scale.linear.js","webpack://edmachina-petcare-challengue/../src/scales/scale.logarithmic.js","webpack://edmachina-petcare-challengue/../src/scales/scale.radialLinear.js","webpack://edmachina-petcare-challengue/../src/scales/scale.time.js","webpack://edmachina-petcare-challengue/../src/scales/scale.timeseries.js","webpack://edmachina-petcare-challengue/../src/index.ts","webpack://edmachina-petcare-challengue/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPrimitive","t","r","e","i","call","TypeError","String","Number","toPropertyKey","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","isShort","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","toString","slice","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","version","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}